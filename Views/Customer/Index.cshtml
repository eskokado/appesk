@model X.PagedList.IPagedList<CustomerModel>
@using X.PagedList.Mvc.Core;

<h4>Consulte os seus Clientes cadastrados na sua Loja ou realize o cadastro de novos Clientes</h4>
<div>
    <a href="@Url.Action("Create", "Customer")" class="btn btn-primary me-3">Adicionar Cliente</a>
    <button class="btn btn-primary" onclick="expandFilterForm()">Filtrar</button>
</div>

<div id="filterFormDiv" class="collapse mt-3 mb-3">
    <h4 class="filter-heading">Filtrar Compradores</h4>
    <form class="row" id="filterForm" method="post" action="@Url.Action("Filter", "Customer")">
        <input type="hidden" id="isFilter" name="isFilter" value="false" />

        <div class="form-group mb-2">
            <label for="name">Nome/Razão Social:</label>
            <input type="text" class="form-control" id="name" name="name" placeholder="Nome ou Razão Social do Cliente">
        </div>
        <div class="form-group mb-2">
            <label for="email">E-mail:</label>
            <input type="text" class="form-control" id="email" name="email" placeholder="E-mail do Cliente">
        </div>
        <div class="form-group col-md-6 mb-3">
            <label for="phone">Telefone:</label>
            <input type="tel" class="form-control" id="phone" name="phone" placeholder="Telefone do Cliente">
        </div>
        <div class="form-group col-md-3">
            <label for="registrationDate">Data de Cadastro:</label>
            <input type="date" class="form-control" id="registrationDate" name="registrationDate" placeholder="Selecione uma data ou período">
        </div>
        <div class="form-group col-md-3">
            <label for="isBlocked">Cliente bloqueado:</label>
            <select class="form-control" id="isBlocked" name="isBlocked">
                <option value="">-- Selecione --</option>
                <option value="true">SIM</option>
                <option value="false">NÃO</option>
            </select>
        </div>    
        <button type="submit" class="btn btn-primary col-md-2 me-3" onclick="hiddenFilterForm()">Aplicar filtros</button>
        <button type="button" class="btn btn-secondary col-md-2" onclick="clearFilters()">Limpar filtros</button>
    </form>
</div>

<div id="customerList" class="mt-3">
    <h4>Lista de Compradores</h4>
    <div id="customerGrid">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <input type="checkbox" id="selectAll" />
                    </th>
                    <th>Nome/Razão Social</th>
                    <th>E-mail</th>
                    <th>Telefone</th>
                    <th>Data de Cadastro</th>
                    <th>Bloqueado</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="selectRow" />
                        </td>
                        <td>@customer.Name</td>
                        <td>@customer.Email</td>
                        <td>@customer.Phone</td>
                        <td>@customer.RegistrationDate.ToString("dd/MM/yyyy")</td>
                        <td>
                            <input type="checkbox" class="isBlockedCheckbox" @(customer.IsBlocked ? "checked" : "") disabled />
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Customer", new { id = customer.Id })" class="btn btn-primary">Editar</a>
                            <a class='btn btn-danger' onclick="DisplayConfirmDeleteModal('@customer.Id')" >Deletar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<nav aria-label="Page navigation" class="mt-3">
    <ul class="pagination  pagination-primary justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">Primeira</a>
        </li>
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Anterior</a>
        </li>
        @for (var pageNumber = 1; pageNumber <= Model.PageCount; pageNumber++)
        {
            <li class="page-item @(pageNumber == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = pageNumber })">@pageNumber</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Próxima</a>
        </li>
        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">Última</a>
        </li>
    </ul>
</nav>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="deleteModalLabel">Confirme Deletar</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" id="CustomerIdDelete" class="form-control" />
        <p>Deseja mesmo apagar este cliente?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button id="btnDelete" type="button" class="btn btn-danger">Deletar</button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            $("#btnDelete").on("click", function(){
                let CustomerId = $("#CustomerIdDelete").val();
                let UrlHandler="/Customer/Delete/"+CustomerId;
                $.ajax({
                    url: UrlHandler, 
                    type: 'POST',
                    success: function() {
                        location.href = '/Customer';
                    }
                });
            });
        });

        var selectAllCheckbox = document.getElementById("selectAll");
        var selectRowCheckboxes = document.getElementsByClassName("selectRow");

        selectAllCheckbox.addEventListener("change", function () {
            var isChecked = selectAllCheckbox.checked;

            for (var i = 0; i < selectRowCheckboxes.length; i++) {
                selectRowCheckboxes[i].checked = isChecked;
            }
        });

        function expandFilterForm() {
            const filterFormDiv = document.getElementById("filterFormDiv");
            filterFormDiv.classList.add("show");
        }

        function hiddenFilterForm() {
            const filterFormDiv = document.getElementById("filterFormDiv");
            filterFormDiv.classList.remove("show");
        }

        function clearFilters() {
            $('#name').val('');
            $('#email').val('')
            $('#phone').val('')
            $('#registrationDate').val('')
            $('#isBlocked').val('')
            $.ajax({
                url: '/Customer/ClearFilters', 
                type: 'POST',
                success: function() {   
                    location.href = '/Customer';
                },
                error: function (error) {
                }                
            });
        }

        function DisplayConfirmDeleteModal(CustomerId) {
            $("#CustomerIdDelete").val(CustomerId);
            $("#deleteModal").modal('show');
        }
        window.DisplayConfirmDeleteModal = DisplayConfirmDeleteModal;
    </script>
}
